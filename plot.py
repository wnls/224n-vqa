import matplotlib.pyplot as plt
import json
import numpy as np

with open('./checkpoints/lr0.000000_wd0.000500_bts1_mon3day8h8m20s22.json') as file:
	data = json.load(file)
	
	train_loss = data['train_loss']
	train_acc = data['train_acc']
	val_acc = data['val_acc']
# with open('./checkpoints/lr5e-07_wd0.0005_bts64_m3d9h5m39s15_continue.json') as file:
# 	data = json.load(file)
	
# 	train_loss.extend(data['train_loss'])
# 	train_acc.extend(data['train_acc'])
# 	val_acc.extend(data['val_acc'])

def smooth(y, box_pts):
    box = np.ones(box_pts)/box_pts
    y_smooth = np.convolve(y, box, mode='same')
    return y_smooth

# # plt.plot(train_loss,'o')
# plt.plot(train_loss[::10], 'r-', lw=2)
s = smooth(train_loss[::20],100)
# plt.plot(train_loss[::10], 'g-', lw=1)
plt.plot([i for i in s if i >0.3], 'g-', lw=1)
# y = savitzky_golay(train_loss, 51, 3)
# plt.plot(y, 'r-', lw=2)
# print(len(train_loss))
# plt.plot(train_loss[::10])
plt.title("Train Loss")
plt.show()

# train_acc = [0.41590138405786553, 0.4360437193462473, 0.4410356420369373, 0.44575104422872613, 0.450379124157704, 0.45275137896406686, 0.4567099882114945, 0.4610324402206343, 0.46355023213168195, 0.46355023213168195, 0.46346290986887106, 0.46580605725429697, 0.46669383359287453, 0.4645544381540074, 0.46584971838570244, 0.46590793322757634, 0.46502015688899884, 0.46554409046586426, 0.4692116255039222, 0.4672323208802084, 0.46870224563752527, 0.4673487505639563, 0.4679600064036326, 0.4677853618780108, 0.4684111714281556, 0.46908064210970585, 0.4688332290317416, 0.46838206400721866, 0.4691388569515798, 0.46966279052844523, 0.4691388569515798, 0.468061882376912, 0.4698083276331301, 0.4668975855394333, 0.4670576763545866, 0.4691243032411113, 0.46756705622098355, 0.4691825180829853, 0.46880412161080465, 0.4642342565237007, 0.4679745601141011, 0.4691825180829853, 0.4670576763545866, 0.4683529565862817, 0.46839661771768715, 0.4679745601141011, 0.47110360786482514, 0.47072521139264456, 0.471190930127636, 0.4682656343234708, 0.4683092954548762, 0.4689496587154895, 0.4680036675350381, 0.4685858159537774, 0.47075431881358154, 0.46956091455516585, 0.4706233354193652, 0.4705069057356173, 0.4691243032411113, 0.46702856893364963, 0.4687895679003362, 0.46781446929894777, 0.46816375835019136, 0.4677562544570738, 0.46902242726783194, 0.4694299311609495, 0.4694590385818865, 0.46938627002954403, 0.4662426685683515, 0.46813465092925444, 0.46871679934799376, 0.4691388569515798, 0.46931350147720163, 0.46989564989594096, 0.4682365269025338, 0.46375398407824076, 0.46500560317853035, 0.4675088413791096, 0.4683529565862817, 0.4674506265372357, 0.46854215482237194, 0.46876046047939923, 0.4660680240427297, 0.4686003696642459, 0.468964212425958, 0.46836751029675017, 0.46908064210970585, 0.4673196431430193, 0.4673487505639563, 0.4696773442389137, 0.46854215482237194, 0.46812009721878595, 0.4697646665017246, 0.47110360786482514, 0.4690515346887689, 0.46988109618547247, 0.47015761668437367, 0.4697355590807876, 0.4706815502612391, 0.4697937739226616]

print("Best train_acc: {}".format(max(train_acc)))
plt.plot(train_acc)
plt.title("Train Acc")
plt.show()


print("Best val_acc: {}".format(max(val_acc)))
plt.plot(val_acc)
plt.title("Val Acc")
plt.show()

